/*
 * Redux Slice for User State
 *
 * This file defines a "slice" of the Redux store focused on user-related data.
 * It includes:
 *
 * - Initial State: 
 *     Holds the user's blockchain account and balance.
 *     Example: { account: "0xabc...", balance: 123 }
 *
 * - Reducers:
 *     Pure functions that update state in response to actions.
 *     They directly mutate the state draft (using Immer under the hood).
 *     - setAccount: Updates the user's account address.
 *     - setBalance: Updates the user's balance.
 *
 * - Actions:
 *     Automatically generated by Redux Toolkit based on the reducer names.
 *     You use them to describe "what happened" in the app.
 *     Example usage in a React component:
 *         dispatch(setAccount("0xabc..."))
 *         dispatch(setBalance(100))
 *
 *     These calls create action objects like:
 *     {
 *         type: "user/setAccount",
 *         payload: "0xabc..."
 *     }
 *
 * Exported:
 *     - Action creators: setAccount, setBalance
 *     - Reducer: userSlice.reducer (default export)
 */


import { createSlice } from '@reduxjs/toolkit'

const userSlice = createSlice({
    name: "user",
    initialState: {
        account: null,
        balance: 0
    },
    // reducers: pure functions that handle state changes
    reducers: {
        setAccount: (state, action)=>{
            state.account = action.payload
        },        
        setBalance: (state, action)=>{
            state.balance = action.payload
        }
    }
})

export const { setAccount, setBalance } = userSlice.actions
export default userSlice.reducer